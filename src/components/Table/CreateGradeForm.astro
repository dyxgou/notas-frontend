---
interface Props {
  subjectId: number;
}

const { subjectId } = Astro.props;
---

<form
  method="dialog"
  id="add-grade-form"
  class="flex flex-col gap-3"
  aria-describedby="form-message"
>
  <label for="name" class="block text-sm font-medium text-gray-700">
    Nombre de la Nota
  </label>

  <input
    type="text"
    name="name"
    required
    minlength="3"
    maxlength="15"
    class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
    placeholder="Introduce el nombre de la nota"
  />
  <span class="font-light text-gray-600 text-sm">
    El nombre debe tener un máximo de 15 caracteres.
  </span>

  <input type="hidden" name="id" value={subjectId} />

  <span
    id="form-grade-message"
    class="text-center font-medium text-blue-600 data-[failed]:text-rose-600"
  >
  </span>

  <button
    class="mt-4 px-4 py-2 text-sm font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700 cursor-pointer"
    type="submit"
  >
    Añadir Nota
  </button>
</form>

<script>
  import { addGrade } from "@/store/grade";
  import { actions } from "astro:actions";

  const formId = "add-grade-form";
  const msgId = "form-grade-message";

  document.addEventListener(
    "astro:page-load",
    () => {
      const form = document.getElementById(formId) as HTMLFormElement;
      const msg = document.getElementById(msgId) as HTMLSpanElement;

      form.addEventListener("submit", async (e) => {
        e.preventDefault();

        const formData = new FormData(form);
        const { data, error } = await actions.grade.create(formData);

        if (error) {
          msg.setAttribute("data-failed", "true");

          if (error.code === "CONFLICT") {
            msg.innerText = error.message;
            return;
          }

          msg.innerText =
            "Ha ocurrido un error al crear la nota. Porfavor reporta este mensaje.";

          return;
        }

        form.reset();
        msg.innerText = "La nota ha sido creada correctamente.";

        const subjectId = parseInt(formData.get("id")!.toString());
        const name = formData.get("name")!.toString();

        addGrade({
          id: data.id,
          subjectId,
          name,
        });
      });
    },
    { once: true },
  );
</script>
